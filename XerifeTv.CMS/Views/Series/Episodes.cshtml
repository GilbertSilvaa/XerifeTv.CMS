@using XerifeTv.CMS.Models.Series;
@using XerifeTv.CMS.Models.Series.Dtos.Response;
@using XerifeTv.CMS.Helpers;

@model GetEpisodesResponseDto;

@{
  ViewData["Title"] = "Séries";
  var episodeEmpty = new Episode { Id = string.Empty };
}

<style>
  @@media (min-width: 800px) {
    #seasonFilter {
      max-width: 20%;
    }
  }
</style>

<div class="container">
  @await Html.PartialAsync("_VideoModal")
  @await Html.PartialAsync("_EpisodeFormModal", episodeEmpty)

  <header>
    <div class="d-flex align-items-center justify-content-between gap-4">
      <div class="d-flex align-items-center gap-4" style="max-width: 65%;">
        <a asp-controller="Series" asp-action="Index" class="fs-4">
          <i class="fa fa-undo" aria-hidden="true"></i>
        </a>
        <span class="d-none d-md-inline-block text-truncate fs-3 fw-normal mw-100">
          Episódios (@Model.SerieTitle)
        </span>
      </div>

      @if (!User.IsInRole("visitor"))
      {
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#episodeFormModal-@episodeEmpty.Id">
          <i class="fa-solid fa-plus"></i> Cadastrar
        </button>
      }
    </div>
    <hr />
  </header>

  <div class="row mb-4 input-group input-group-sm">
    <select 
      class="form-select shadow-none" 
      name="seasonFilter" 
      id="seasonFilter">

      @for (var i = 1; i <= (ViewBag.NumberSeasons ?? 1); i++)
      {
        if (i == ViewBag.SeasonFilter)
        {
          <option value="@i" selected>@i ª Temporada</option>
        }
        else
        {
          <option value="@i">@i ª Temporada</option>
        }
      }
    </select>
  </div>

  <div class="row gap-2">
    <input
      id="subtitle-file"
      type="file"
      accept=".vtt"
      style="display: none"
      onchange="uploadSubtitleFile()"/>
    
    @foreach (var episode in Model.Episodes)
    {
      <div class="card mb-3 col-md-12 col-lg-8 col-xl-5">
        <div class="row g-0">
          <div class="col-md-4">
            <img 
              src="@episode.BannerUrl" 
              class="img-fluid rounded-start h-100 w-100" 
              alt="@episode.Title"
              style="max-height: 250px;">
          </div>
          <div class="col-md-8">
            <div class="card-body">
              <h5 class="card-title">@episode.Title</h5>
              <p class="card-text">
                @DateTimeHelper.ConvertSecondsToHHmm(episode.Video?.Duration ?? 0)
              </p>
              <p class="card-text">
                <small class="text-body-secondary">
                  Temporada @episode.Season | Episódio @episode.Number
                </small>
              </p>

              @if (!User.IsInRole("visitor"))
              {
                <a class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#episodeFormModal-@episode.Id">
                  <i class="fa-solid fa-pen-to-square"></i>
                </a>
              }

              <a
                class="btn btn-sm btn-secondary"
                data-bs-toggle="modal"
                data-bs-target="#videoModal"
                data-bs-title="@episode.Title"
                data-bs-banner="@episode.BannerUrl"
                data-bs-video-url="@episode.Video?.Url"
                data-bs-video-format="@episode.Video?.StreamFormat"
                data-bs-video-subtitle="@episode.Video?.Subtitle">
                <i class="fa-solid fa-play"></i>
              </a>
            </div>
          </div>
        </div>
      </div>

      @await Html.PartialAsync("_EpisodeFormModal", episode)
    }

    @if (Model.Episodes.Count() == 0)
    {
      <p>Nenhum registro encontrado.</p>
    }
  </div>
</div>

@section scripts {
  <script defer>
    $('#seasonFilter').change(e =>
      location.href = `/Series/Episodes/@Model.SerieId?seasonFilter=${e.target.value}`)

    $('.duration').keyup(e => 
      $(e.target).val(convertHHmmToSeconds(e.target.value)))

    $('.disabled').change(e => e.target.value = e.target.checked);

    function remove(id) {
      if (!confirm('Deseja realmento excluir o episódio?')) return;
      location.href = `/Series/DeleteEpisode?serieId=@Model.SerieId&id=${id}`;
    }

    function uploadSubtitleFile() {
      const fileInput = $('#subtitle-file')[0];
      const file = fileInput.files[0];

      if (!file) return;

      const formData = new FormData();
      formData.append('file', file);

      $('.btn-subtitle-file').attr('disabled', 'true');

      fetch('/StorageFiles/UploadFile', {
        method: 'POST',
        body: formData
      })
        .then(response => response.json())
        .then(({ isSuccess, data }) => {
          if (isSuccess) $('.videoSubtitle:visible').val(data);
        })
        .finally(() => $('.btn-subtitle-file').removeAttr('disabled'))
    }
  </script>
}